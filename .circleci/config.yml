version: 2.1
jobs:
  build-app:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - restore_cache:
          keys:
            - mvn-dependencies-{{ checksum "pom.xml" }}
            - mvn-dependencies-
      - run:
          name: Installing dependencies
          command: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: mvn-dependencies-{{ checksum "pom.xml" }}
      - run:
          name: Building project
          command: mvn package
      - persist_to_workspace:
          root: .
          paths:
            - target/*

  build-docker:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - checkout
      - sett-miljovariabler
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Bygger Docker image
          command: |
            echo $IMAGE_NAME
            docker build -t $IMAGE_NAME .
      - run:
          name: Pusher Docker image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $IMAGE_NAME

  deploy-til-q6:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - checkout
      - sett-miljovariabler
      - deploy:
          cluster: dev-sbs
          namespace: q6

  deploy-til-q2:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - checkout
      - sett-miljovariabler
      - deploy:
          cluster: dev-sbs
          namespace: q2

  deploy-til-q1:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - checkout
      - sett-miljovariabler
      - deploy:
          cluster: dev-sbs
          namespace: q1

  deploy-til-q0:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - checkout
      - sett-miljovariabler
      - deploy:
          cluster: dev-sbs
          namespace: q0

  deploy-til-prod:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - checkout
      - sett-miljovariabler
      - deploy:
          cluster: prod-sbs
          namespace: default

commands:
  deploy:
    parameters:
      cluster:
        type: string
      namespace:
        type: string
    steps:
      - run:
          name: Definerer ingresser for dev-sbs
          command: |
            jq -n '{
                "ingresses": [
                  "'https://$REPO_NAME-<< parameters.namespace >>.nais.oera-q.local'",
                  "'https://www-<< parameters.namespace >>.nav.no/person/$REPO_NAME'"
            ]}' | tee nais.dev-sbs.vars.json

      - run:
          name: Definerer ingresser for prod-sbs
          command: |
            jq -n '{
                "ingresses": [
                  "'https://$REPO_NAME.nais.oera.no'",
                  "'https://www.nav.no/person/$REPO_NAME'"
             ]}' | tee nais.prod-sbs.vars.json

      - run:
          name: Deployer til << parameters.cluster >>, namespace << parameters.namespace >>
          command: |
            echo $GH_DEPLOY_KEY | base64 -d | dos2unix > gh_deploy_key.pem
            deployment-cli deploy create \
                --team=personbruker \
                --resource=.nais/config.yaml \
                --cluster=<< parameters.cluster >> \
                --repository=$CIRCLE_PROJECT_USERNAME/$REPO_NAME \
                --vars=nais.<< parameters.cluster >>.vars.json \
                --var namespace=<< parameters.namespace >> \
                --var baseurl=/person/$REPO_NAME \
                --var reponame=$REPO_NAME \
                --var version=$IMAGE_VERSION \
                --key=gh_deploy_key.pem \
                --ref=$COMMIT_SHORT \
                --appid=34043

  sett-miljovariabler:
    steps:
      - run:
          name: Definerer git-referanse, versjonsnummer og repo-navn
          command: |
            echo "export COMMIT_SHORT='$(git rev-parse --short HEAD)'" >> $BASH_ENV
            echo "export IMAGE_VERSION='$CIRCLE_WORKFLOW_ID-${CIRCLE_BRANCH////-}$CIRCLE_TAG'" >> $BASH_ENV
            echo "export REPO_NAME='$CIRCLE_PROJECT_REPONAME'" >> $BASH_ENV
      - run:
          name: Definerer navn pÃ¥ docker-image
          command: |
            echo "export IMAGE_NAME='$CIRCLE_PROJECT_USERNAME/$REPO_NAME:$IMAGE_VERSION'" >> $BASH_ENV

workflows:
  bygg-og-deploy:
    jobs:
      - build-app:
          filters:
            tags:
              only: /.*/

      - bekreft-deploy-til-dev:
          type: approval
          requires:
            - build-app

      - build-docker:
          name: build-docker-dev
          requires:
            - bekreft-deploy-til-dev

      - deploy-til-q6:
          requires:
            - build-docker-dev
      - deploy-til-q2:
          requires:
            - build-docker-dev
      - deploy-til-q1:
          requires:
            - build-docker-dev
      - deploy-til-q0:
          requires:
            - build-docker-dev

      - bekreft-deploy-til-prod:
          type: approval
          requires:
            - build-app
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master

      - build-docker:
          name: build-docker-prod
          requires:
            - bekreft-deploy-til-prod
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master

      - deploy-til-prod:
          requires:
            - build-docker-prod
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master
